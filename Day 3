#Day 3 ----
#Input 
input3 <- read.table('input_3_test.txt',
           header = FALSE, 
           sep = "\t",
           stringsAsFactors = FALSE,
           fill = TRUE,
           comment.char = "")


#Defnimos la matriz con las filas, columnas, asignamos el ID, y extraemosel numero completo
ret <- input3 %>%
        mutate(row = row_number()) %>%
        mutate(value = stringr::str_split(V1, '')) %>%
        select(-V1) %>%
        tidyr::unnest(value) %>%
        group_by(row) %>%
        mutate(col = row_number()) %>%
        ungroup() |>  
        mutate(is_digit = str_detect(value,"\\d")) |>  
        group_by(row) |>  
        mutate(number_id = paste0(row, ".", cumsum(is_digit!= lag(is_digit, default = FALSE)))) |>  
        group_by(number_id) |>  
        mutate(part_number = as.numeric(paste0( value, collapse = ''))) |>  
        ungroup() 

#Posiciones adyacentes al valor en cada posici√≥n de la matriz
adj <- tibble(row_delta = c(-1, 1, 0, 0),
              col_delta = c(0, 0, -1, 1))
adj <- bind_rows(adj,
                 tibble(row_delta = c(-1, -1, 1, 1),
                        col_delta = c(-1, 1, -1, 1)))

#Asignamos las posiciones adyacentes a cada valor de la matriz 
ret2 <-  ret  %>%
         filter(!is.na(part_number)) |> 
         tidyr::crossing(adj) %>%
         mutate(row2 = row + row_delta,
                col2 = col + col_delta) %>%
         inner_join(ret, by = c(row2 = "row", col2 = "col"), suffix = c("", "2")) %>%
         filter(row != row2 | col != col2) %>%
         select(-row_delta, -col_delta)

#Outcome part 1  -----
outcome3 <- ret2 |>  
            filter(value2 != "." & !is_digit2) |>   
            distinct(number_id, .keep_all = TRUE) |> 
            summarise(sum(part_number))


#Outcome part 2 -----
outcome_3_1 <-  ret2 |>  
                filter(value2 != "." & !is_digit2) |> 
                mutate(gear_id = paste0(row2,".",col2)) |> 
                distinct(number_id, .keep_all = TRUE) |> 
                group_by(gear_id) |>  
                mutate(count_gear = n()) |>  
                ungroup() |>  
                filter(count_gear > 1 ) |>  
                group_by(gear_id) |> 
                mutate(product_gear = prod(part_number)) |> 
                ungroup() |> 
                distinct(gear_id, .keep_all = TRUE) |> 
                summarise(sum(product_gear))
